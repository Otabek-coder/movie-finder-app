{"ast":null,"code":"import _taggedTemplateLiteral from \"/Users/HomeFolder/Downloads/otabek-assignment/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nvar _templateObject,\n    _templateObject2,\n    _templateObject3,\n    _jsxFileName = \"/Users/HomeFolder/Downloads/otabek-assignment/src/components/Card.js\";\n\nimport React from \"react\";\nimport styled from \"styled-components\";\nvar CardWrapper = styled.div(_templateObject || (_templateObject = _taggedTemplateLiteral([\"\\n  box-shadow: rgba(0, 0, 0, 0.15) 1.95px 1.95px 2.6px;\\n  max-height: 415px;\\n  @media only screen and (max-width: 600px) {\\n    max-height: 100%;\\n  }\\n\"])));\nvar MovieImgContainer = styled.div(_templateObject2 || (_templateObject2 = _taggedTemplateLiteral([\"\\n  overflow: hidden;\\n  max-width: 300px;\\n  .movie-img {\\n    width: 100%;\\n    height: 100%;\\n    object-fit: cover;\\n    margin-bottom: auto;\\n    transition: 0.3s ease;\\n    &:hover {\\n      -webkit-transform: scale(1.1);\\n      transform: scale(1.1);\\n    }\\n  }\\n  @media only screen and (max-width: 600px) {\\n    max-width: 100%;\\n  }\\n\"])));\nvar MovieDetailsContainer = styled.div(_templateObject3 || (_templateObject3 = _taggedTemplateLiteral([\"\\n  text-align: center;\\n\\n  .title {\\n    font-size: 1.3rem;\\n    overflow: hidden;\\n    text-overflow: ellipsis ellipsis;\\n    white-space: nowrap;\\n    display: block;\\n    width: 300;\\n  }\\n  .card-footer {\\n    display: flex;\\n    justify-content: space-around;\\n  }\\n\"])));\n\nfunction Card(_ref) {\n  var movie = _ref.movie;\n  var title = movie.title,\n      released_date = movie.released_date,\n      vote_average = movie.vote_average,\n      media_type = movie.media_type,\n      original_language = movie.original_language,\n      poster_path = movie.poster_path;\n  return /*#__PURE__*/React.createElement(CardWrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(MovieImgContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: \"https://image.tmdb.org/t/p/w500\" + poster_path,\n    alt: \"\",\n    className: \"movie-img\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(MovieDetailsContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }\n  }, title), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card-footer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"released-date\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 11\n    }\n  }, String(released_date).split(\"\", 4)), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"vote\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 11\n    }\n  }, Number.isInteger(vote_average) ? vote_average + \".0\" : vote_average), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"media-type\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 11\n    }\n  }, media_type.toUpperCase()), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"lang\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 11\n    }\n  }, original_language.toUpperCase()))));\n}\n\nexport default Card;","map":{"version":3,"sources":["/Users/HomeFolder/Downloads/otabek-assignment/src/components/Card.js"],"names":["React","styled","CardWrapper","div","MovieImgContainer","MovieDetailsContainer","Card","movie","title","released_date","vote_average","media_type","original_language","poster_path","String","split","Number","isInteger","toUpperCase"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AAEA,IAAMC,WAAW,GAAGD,MAAM,CAACE,GAAV,gOAAjB;AAQA,IAAMC,iBAAiB,GAAGH,MAAM,CAACE,GAAV,+ZAAvB;AAmBA,IAAME,qBAAqB,GAAGJ,MAAM,CAACE,GAAV,wVAA3B;;AAiBA,SAASG,IAAT,OAAyB;AAAA,MAATC,KAAS,QAATA,KAAS;AAAA,MAErBC,KAFqB,GAQnBD,KARmB,CAErBC,KAFqB;AAAA,MAGrBC,aAHqB,GAQnBF,KARmB,CAGrBE,aAHqB;AAAA,MAIrBC,YAJqB,GAQnBH,KARmB,CAIrBG,YAJqB;AAAA,MAKrBC,UALqB,GAQnBJ,KARmB,CAKrBI,UALqB;AAAA,MAMrBC,iBANqB,GAQnBL,KARmB,CAMrBK,iBANqB;AAAA,MAOrBC,WAPqB,GAQnBN,KARmB,CAOrBM,WAPqB;AAUvB,sBACE,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,iBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AACE,IAAA,GAAG,EAAE,oCAAoCA,WAD3C;AAEE,IAAA,GAAG,EAAC,EAFN;AAGE,IAAA,SAAS,EAAC,WAHZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,eAQE,oBAAC,qBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAI,IAAA,SAAS,EAAC,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAuBL,KAAvB,CADF,eAEE;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAG,IAAA,SAAS,EAAC,eAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA8BM,MAAM,CAACL,aAAD,CAAN,CAAsBM,KAAtB,CAA4B,EAA5B,EAAgC,CAAhC,CAA9B,CADF,eAEE;AAAG,IAAA,SAAS,EAAC,MAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGC,MAAM,CAACC,SAAP,CAAiBP,YAAjB,IACGA,YAAY,GAAG,IADlB,GAEGA,YAHN,CAFF,eAOE;AAAG,IAAA,SAAS,EAAC,YAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA2BC,UAAU,CAACO,WAAX,EAA3B,CAPF,eAQE;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAuBN,iBAAiB,CAACM,WAAlB,EAAvB,CARF,CAFF,CARF,CADF;AAwBD;;AAED,eAAeZ,IAAf","sourcesContent":["import React from \"react\";\nimport styled from \"styled-components\";\n\nconst CardWrapper = styled.div`\n  box-shadow: rgba(0, 0, 0, 0.15) 1.95px 1.95px 2.6px;\n  max-height: 415px;\n  @media only screen and (max-width: 600px) {\n    max-height: 100%;\n  }\n`;\n\nconst MovieImgContainer = styled.div`\n  overflow: hidden;\n  max-width: 300px;\n  .movie-img {\n    width: 100%;\n    height: 100%;\n    object-fit: cover;\n    margin-bottom: auto;\n    transition: 0.3s ease;\n    &:hover {\n      -webkit-transform: scale(1.1);\n      transform: scale(1.1);\n    }\n  }\n  @media only screen and (max-width: 600px) {\n    max-width: 100%;\n  }\n`;\n\nconst MovieDetailsContainer = styled.div`\n  text-align: center;\n\n  .title {\n    font-size: 1.3rem;\n    overflow: hidden;\n    text-overflow: ellipsis ellipsis;\n    white-space: nowrap;\n    display: block;\n    width: 300;\n  }\n  .card-footer {\n    display: flex;\n    justify-content: space-around;\n  }\n`;\n\nfunction Card({ movie }) {\n  const {\n    title,\n    released_date,\n    vote_average,\n    media_type,\n    original_language,\n    poster_path,\n  } = movie;\n\n  return (\n    <CardWrapper>\n      <MovieImgContainer>\n        <img\n          src={\"https://image.tmdb.org/t/p/w500\" + poster_path}\n          alt=\"\"\n          className=\"movie-img\"\n        />\n      </MovieImgContainer>\n      <MovieDetailsContainer>\n        <h1 className=\"title\">{title}</h1>\n        <div className=\"card-footer\">\n          <p className=\"released-date\">{String(released_date).split(\"\", 4)}</p>\n          <p className=\"vote\">\n            {Number.isInteger(vote_average)\n              ? vote_average + \".0\"\n              : vote_average}\n          </p>\n          <p className=\"media-type\">{media_type.toUpperCase()}</p>\n          <div className=\"lang\">{original_language.toUpperCase()}</div>\n        </div>\n      </MovieDetailsContainer>\n    </CardWrapper>\n  );\n}\n\nexport default Card;\n"]},"metadata":{},"sourceType":"module"}